#summary Basic installation instructions
#labels Phase-Deploy

= Basic Setup =

== Download the Software ==

First ensure that [http://svnbook.red-bean.com/ Subversion (SVN)] is installed:
<code language="sh">
sudo apt-get update
sudo apt-get install subversion</code>

Then use it to download the current version of this software:
<code language="sh">
svn checkout http://heatmiser-wifi.googlecode.com/svn/trunk/ ~/heatmiser-wifi-read-only</code>

The example commands in these instructions assume that the files are checked out to `~/heatmiser-wifi-read-only`. Replace the path as appropriate.

For more details see the instructions on the [http://code.google.com/p/heatmiser-wifi/source/checkout Source Checkout] page.

== Install Perl ==

Check that Perl version 5 is installed using:
<code language=sh>
perl -v</code>
If it is already installed then it should output something like:
<blockquote><pre>
This is perl 5, version 14, subversion 2 (v5.14.2) built for arm-linux-gnueabihf-thread-multi-64int
(with 75 registered patches, see perl -V for more detail)

 Copyright 1987-2011, Larry Wall

 Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

 Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page. </pre></blockquote>

Otherwise install it using:
<code language=sh>
sudo apt-get update
sudo apt-get install perl5</code>

Ensure that essential Perl packages are installed. For fully featured systems use:
<code language=sh>
sudo apt-get install build-essential libxml-simple-perl libjson-perl
sudo cpan CGI Cwd DBI File::HomeDir Getopt::Std IO::Socket JSON LWP::UserAgent Proc::Daemon Proc::PID::File Time::HiRes XML::Simple</code>
Answer `yes` to any questions about whether the tool should configure itself and choose mirror sites automatically.

For smaller platforms, such as the [http://www.raspberrypi.org/ Raspberry Pi], it may be better to use `cpanminus` instead:
<code language=sh>
curl -L http://cpanmin.us | perl - --sudo App::cpanminus
sudo apt-get install libxml-simple-perl
sudo cpanm CGI Cwd DBI File::HomeDir Getopt::Std IO::Socket JSON LWP::UserAgent Proc::Daemon Proc::PID::File Time::HiRes XML::Simple</code>
This should be faster, but some users have reported problems with its use. If it fails then use the `cpan` command listed above.

== Test Basic Operation ==

That should be all that's necessary for basic operation. Test the connection to the thermostat by running:
<code language="sh">
~/heatmiser-wifi-read-only/bin/heatmiser.pl -h heatmiser -p 1234</code>
where `heatmiser` should be changed to the IP address or hostname of the thermostat, and `1234` should be changed to the PIN access code selected for the thermostat's Wi-Fi system protocol interface (as used by the iPhone/iPad and Android apps).

This should display the current status of the thermostat:
<blockquote><pre>
### heatmiser ###
Heatmiser PRT version 1.2
Thermostat is ON (heating mode)
Time 2011-12-12 10:36:18
Temperature 20.6 deg C (internal)
Target 21 deg C
Heating is ON
Feature 01: Temperature format        C
Feature 02: Switching differential  0.5 deg C
Feature 03: Frost protect             1
Feature 04: Frost temperature        12 deg C
Feature 05: Output delay              0 minutes
Feature 06: Comms #                 n/a
Feature 07: Temperature limit         0 deg C
Feature 08: Sensor selection        internal
Feature 09: Floor limit             n/a
Feature 10: Optimum start             3 hours
Feature 11: Rate of change           38 minutes / deg C
Feature 12: Program mode            5/2 day
Weekday   1: 07:00 21 deg C
          2: 20:00 15 deg C
Weekend   1: 07:00 21 deg C
          2: 20:00 15 deg C</pre></blockquote>

The error `Unable to create socket: Invalid argument` indicates that the hostname is wrong. The error `Incorrect PIN used` should be self explanatory.

== Configuration File ==

Once basic operation has been confirmed the hostname and PIN number should be placed in a text file called `/etc/heatmiser.conf`. This avoids the need to keep typing these settings, and also allows operation of the daemon that logs data from the thermostat. The file should contain:
<code language="nocode">
HOST        heatmiser
PIN         1234</code>
where `heatmiser` and `1234` should be replaced by the hostname and PIN used above. Lines beginning with a hash character (#) are ignored, so can be used for comments.

(A space-separated list of hostnames can be used to support multiple thermostats.)

Check correct operation again by running the script, but without the hostname and PIN on the command line:
<code language="sh">
~/heatmiser-wifi-read-only/bin/heatmiser.pl</code>

If everything is working properly then you can now setup the [InstallationWebInterface Web Interface] to log the thermostat's operation and plot charts of the temperature. Alternatively, setup [InstallationTimeSync Automatic Time Synchronisation] to keep your thermostat's clock accurate and automatically adjust to the start and end of summer (daylight saving) time.