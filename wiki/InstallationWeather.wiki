#summary External temperature from an online weather service installation instructions
#labels Phase-Deploy

= Logging and Charting External Temperature =

Once charting of the thermostat data is working by following the [InstallationWebInterface Web Interface Setup] it is possible to add external temperature data obtained from an online weather service.

== Select a Weather Service ==

Several free online weather services are supported. Choose one that meets your requirements...

<table border=0 cellspacing=20>
<tr><td valign=top>
----
=== UK Met Office !DataPoint ===
<img src="https://register.metoffice.gov.uk/WaveRegistrationClient/public/images/lg_mo.gif" width="200px" hspace=50>

_The [http://www.metoffice.gov.uk/public/ddc UK Met Office DataPoint] datafeeds provide hourly observations available from ~122 locations around the UK._

_ Requires registration for a free account._
<td valign=top>
----
==== Service ====
`metoffice`

==== API Key ====

Visit https://register.metoffice.gov.uk/register/ddc and register for an account (or add a Met Office !DataPoint subscription to your existing account). Then visit http://www.metoffice.gov.uk/premium/ddc/retrieveKey.html to obtain your API key.

==== Location ====

The location can be specified in two ways:
|| *Value* || *Example* || *Description* ||
|| _latitude_`,`_longitude_ || `52.288837,0.124287` || Nearest location to a specified latitude and longitude ||
|| _location_id_ || `3482` || A specific location ID. A complete list can be obtained from http://www.metoffice.gov.uk/premium/ddc/previewData.html by clicking on the *XML* link under the *Observarions site list* heading. ||

Specifying a latitude and longitude is likely to be more reliable since valid data will still be obtained if observations are temporarily unavailable from a specific location.

<tr><td valign=top>
----
=== Weather Underground ===
<img src="http://icons.wxug.com/logos/images/wundergroundLogo_4c_horz.jpg" width="200px" hspace=50>

_The [http://www.wunderground.com/weather/api Weather Underground API] provides observations from over 22,000 personal weather stations worldwide plus many official weather stations at airports and other locations._

_Requires registration for a free 'developer' account. This allows for up to 500 calls per day and 10 calls per minute which should be sufficient for most users._
<td valign=top>
----
==== Service ====
`wunderground`
==== API Key ====
Visit http://www.wunderground.com/weather/api to create an account to obtain an API Key (sixteen hexadecimal digits). 
==== Location ===
The location can be specified in several ways, including:
|| *Value* || *Example* || *Description* ||
|| _country_`/`_city_ || `England/Cottenham` || A named city ||
|| _latitude_`,`_longitude_ || `52.288837,0.124287` || Specified latitude and longitude ||
|| _airport_code_ || `EGSC` || [http://en.wikipedia.org/wiki/List_of_airports_by_ICAO_code International Civil Aviation Organization (ICAO) airport code] ||
|| `pws:`_pws_identifier_ || `pws:ICAMBSCO1` || Personal Weather Station identifier ||
|| `autoip` || `autoip` || Automatically identify location from the IP address ||

<tr><td valign=top>
----
=== iGoogle ===
<img src="http://www.google.com/ig/images/igoogle_logo_sm.gif" width="200px" hspace=50>

_The [http://www.google.com/ig iGoogle] weather API is intended to be used by iGoogle gadgets, so it may change without notice and excessive use is likely to be blocked._

_No registration is required._
<td valign=top>
----
==== Service ====
`google`
==== Location ====
Quite a few formats can be used for specifying the location, including:
|| *Value* || *Example* || *Description* ||
|| `postcode` || `CB248UP` || Address post code ||
|| _city_`,`_country_ || `Cottenham,England` || A named city ||

<tr><td valign=top>
----
=== Yahoo! Weather ===
<img src="http://l.yimg.com/a/i/brand/purplelogo//uh/us/news-wea.gif" width="200px" hspace=50>

_The [http://developer.yahoo.com/weather Yahoo! Weather RSS Feed] provides worldwide weather information._

_No registration is required._
<td valign=top>
----
==== Service ====
`yahoo`
==== Location ====
The location must be specified as a WOEID. This can be found by browsing or searching for your city from the [http://weather.yahoo.com/ Yahoo! Weather] home page; the WOEID is the number that appears at the end of the resulting URL.

For example, a search for _Cottenham_ results in the URL `http://weather.yahoo.com/england/cambridgeshire/cottenham-16974/`, so the WOEID is `16974`.
<tr><td valign=top>
----
<td valign=top>
----
<tr><td colspan=2>

== Test Basic Operation ==

Once the weather service has been selected, an API key obtained if appropriate (Met Office !DataPoint or Weather Underground), and the location obtained in a suitable format, it is possible to test it by running:
<code language="sh">
~/heatmiser-wifi-read-only/bin/heatmiser_weather.pl -w wunderground -k 0123456789abcdef -g pws:ICAMBSCO1</code>
where `wunderground` should be changed to identify the service being used, `0123456789abcdef` should be set to your API key (or omitted if using iGoogle or Yahoo! Weather), and `pws:ICAMBSCO1` should be replaced by your location.

This should display the most recent weather observation:
<blockquote><pre>
External temperature at 2012-04-29 18:15:52 was 14.0C</pre></blockquote>

is the service identifier,  should be replaced by the API key (or the line omitted if iGoogle or Yahoo! Weather are being used)

== Update the Configuration File ==

Once access to the weather service has been confirmed the configuration options should be added to the `/etc/heatmiser.conf` file:
<code language="nocode">
HOST        heatmiser
PIN         1234
WSERVICE    wunderground
WKEY        0123456789abcdef
WLOCATION   pws:ICAMBSCO1</code>
where `wunderground`, `0123456789abcdef` and `pws:ICAMBSCO1` should be replaced by the service, API key and location used above.

By default the weather service is polled once for every 5 readings of the thermostats, i.e. every 5 minutes. This can be changed by adding a `WLOGRATE` entry to the `/etc/heatmiser.conf` file specifying the number of thermostat readings per poll of the external temperature. Be careful not to exceed any API limits otherwise access is likely to be blocked.

If your thermostats are configured to display temperatures in Fahrenheit  then it is also necessary to add `WUNITS F` to the configuration file in order to obtain the external temperature in the same units.

== Restart the Daemon ==

Restart the daemon manually using:

<code language="sh">
sudo /etc/init.d/heatmiser_daemon restart</code>

Check the `/var/log/heatmiser` file for any errors.

Logging of external temperature data can be checked by reconnecting to MySQL:
<code language="sh>
mysql -u heatmiser heatmiser</code>
and then viewing the contents of the `weather` table:
<code language="sql">
SELECT * FROM weather;</code>
<blockquote><pre>
+---------------------+----------+
| time                | external |
+---------------------+----------+
| 2012-04-29 18:15:52 |     14.0 |
| 2012-04-29 18:20:43 |     14.3 |
| 2012-04-29 18:25:34 |     14.5 |
| 2012-04-29 18:30:46 |     14.6 |
| 2012-04-29 18:35:56 |     14.4 |
+---------------------+----------+
5 rows in set (0.00 sec)</pre></blockquote>

As before, when done disconnect from the MySQL server:
<code language="sql">
QUIT;</code>

Opening the web page in a web browser should now show a dashed black line for the external temperature.

== Import Historical Data ==

If Weather Underground is being used for the external temperature data then it is possible to retrieve historical temperature data. This is useful if the thermostat temperatures have been logged for a while before configuring a weather service to populate the database with corresponding external temperature data.

To avoid using up the daily API call allowance required by the daemon it is recommended to create a second API key at http://www.wunderground.com/weather/api/d/edit.html. Ensure that the _Yes, give me FULL access to one of the biggest historical weather databases on the web_ option is selected when creating the key.

Retrieve the historical temperature data using:
<code language="sh">
~/heatmiser-wifi-read-only/bin/heatmiser_history.pl -k 0123456789abcdef</code>
where `0123456789abcdef` should be set to your new API key.

Note that this will take a long time to run. Please be very patient. A 6 second delay is inserted between requesting each day's data to avoid exceeding the 10 calls per minute API limit. Adding thousands of new rows to the database will also take a while.

It is safe to re-run the script to ensure that all available historical data has been imported.