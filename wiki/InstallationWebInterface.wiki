#summary Web interface installation instructions
#labels Phase-Deploy

= Logging to a Database =

Once rudimentary communication with the thermostat has been confirmed by following the [InstallationBasic Basic Setup] it is possible to setup the daemon that periodically logs the thermostat's status to a database for later charting.

== Install MySQL ==

Check that MySQL is installed using:
<code language=sh>
mysql -V</code>
If it is already installed then it should output something like:
<blockquote><pre>
mysql  Ver 14.14 Distrib 5.1.41, for debian-linux-gnu (x86_64) using readline 6.1</pre></blockquote>

If this is not shown then install it using:
<code language=sh>
sudo apt-get update
sudo apt-get install mysql-server</code>

== Create a MySQL User ==

By default the daemon connects to a MySQL database called `heatmiser` as a local user also called `heatmiser`. These both needs to be created. Connect to the MySQL server using:
<code language="sh>
mysql -u root -p</code>
Enter the MySQL `root` password when prompted. Then create the database and user:
<code language="sql">
CREATE DATABASE heatmiser;
CREATE USER 'heatmiser'@'localhost';
GRANT ALL ON heatmiser.* TO 'heatmiser'@'localhost';
QUIT;</code>
This can be tested by reconnecting to the MySQL server as the new user:
<code language="sh>
mysql -u heatmiser heatmiser</code>
It should not be necessary to enter a password. The databases can be listed using:
<code language="sql">
SHOW DATABASES;</code>
<blockquote><pre>
+--------------------+
| Database           |
+--------------------+
| information_schema |
| heatmiser          |
+--------------------+
2 rows in set (0.00 sec)</pre></blockquote>
The access permissions for the `heatmiser` user can be checked using:
<code language="sql">
SHOW GRANTS FOR 'heatmiser'@'localhost';</code>
<blockquote><pre>
+------------------------------------------------------------------+
| Grants for heatmiser@localhost                                   |
+------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'heatmiser'@'localhost'                    |
| GRANT ALL PRIVILEGES ON `heatmiser`.* TO 'heatmiser'@'localhost' |
+------------------------------------------------------------------+
2 rows in set (0.00 sec)</pre></blockquote>
Finally, disconnect from the MySQL server:
<code language="sql">
QUIT;</code>

== Install the Daemon ==

Create symbolic links to the daemon script and the `init` script used to control it:
<code language="sh">
sudo ln -s /home/user/heatmiser-wifi-read-only/bin/init /etc/init.d/heatmiser_daemon
sudo ln -s /home/user/heatmiser-wifi-read-only/bin/heatmiser_daemon.pl /usr/local/bin/heatmiser_daemon</code>

Start the daemon manually using:

<code language="sh">
sudo /etc/init.d/heatmiser_daemon start</code>

If this worked successfully then the `/var/log/heatmiser` file should contain:
<blockquote><pre>
>>>> heatmiser_daemon started >>>></pre></blockquote>

If any errors are displayed either in the terminal or in the log file then they need to be resolved before continuing.

The daemon should automatically create the database tables that it requires. These can be checked by reconnecting to MySQL:
<code language="sh>
mysql -u heatmiser heatmiser</code>
It should not be necessary to enter a password. The database tables can be listed using:
<code language="sql">
SHOW TABLES;</code>
This should list five tables:
<blockquote><pre>
+---------------------+
| Tables_in_heatmiser |
+---------------------+
| comfort             |
| events              |
| settings            |
| temperatures        |
| timer               |
+---------------------+
5 rows in set (0.00 sec)</pre></blockquote>
The contents of these tables can be checked using commands similar to:<code language="sql">
SELECT * FROM settings;</code>
<blockquote><pre>
+------------+----------+-----------+
| thermostat | name     | value     |
+------------+----------+-----------+
| heatmiser  | holiday  |           |
| heatmiser  | mode     | heating   |
| heatmiser  | version  | 1.2       |
| heatmiser  | model    | PRT       |
| heatmiser  | progmode | 5/2       |
| heatmiser  | units    | C         |
| heatmiser  | vendor   | Heatmiser |
| heatmiser  | host     | heatmiser |
+------------+----------+-----------+
8 rows in set (0.00 sec)</pre></blockquote>

As before, when done disconnect from the MySQL server:
<code language="sql">
QUIT;</code>

By default the daemon logs the temperature every 60 seconds. This can be changed by adding a `LOGSECONDS` entry to the `/etc/heatmiser.conf` file specifying the interval in seconds between successive values.

Configure the daemon to start automatically when the computer is booted using:
<code language="sh">
sudo insserv /etc/init.d/heatmiser_daemon</code>

= Plot Charts =

The final step of the installation is to set up a web page to plot charts of the temperature.

== Install Apache ==

If Apache is not already running then install it using:
<code language=sh>
sudo apt-get update
sudo apt-get install apache2</code>

Allow web pages to be served from `/home/*/public_html` directories using:
<code language=sh>
sudo a2enmod userdir</code>

Ensure that the web server accepts symbolic links for running cgi-bin scripts. This involves editing `/etc/apache2/sites-available/default` and replacing `+SymLinksIfOwnerMatch` by `+FollowSymLinks`. There will probably be a section of the file that resembles:
<pre>
        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
        <Directory "/usr/lib/cgi-bin">
                AllowOverride None
                Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
                Order allow,deny
                Allow from all
        </Directory></pre>
This should be changed to:
<pre>
        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
        <Directory "/usr/lib/cgi-bin">
                AllowOverride None
                Options +ExecCGI -MultiViews +FollowSymLinks
                Order allow,deny
                Allow from all
        </Directory></pre>

Restart Apache to use the new configuration using:
<code language=sh>
sudo /etc/init.d/apache2 reload</code>

== Install Web Page ==

Create a `cgi-bin` directory for the AJAX back-end script, and create a symbolic link from it to the location of the script:
<code language=sh>
sudo mkdir /usr/lib/cgi-bin/heatmiser
sudo ln -s /home/user/heatmiser-wifi-read-only/bin/heatmiser_cgi.pl /usr/lib/cgi-bin/heatmiser/ajax.pl</code>

Create a directory for the web page, and create a symbolic link to the HTML file:
<code language=sh>
mkdir /home/user/public_html
mkdir /home/user/public_html/heatmiser-wifi
ln -s /home/user/heatmiser-wifi-read-only/html/index.html /home/user/public_html/heatmiser-wifi/index.html</code>

If a different `cgi-bin` directory was used then it will probably be necessary to modify `index.html` with the correct URL to access it.

Download the jQuery !JavaScript library to the same directory as the `index.html` file:
<code language="sh">
wget http://code.jquery.com/jquery-1.7.2.min.js -O /home/user/public_html/heatmiser-wifi/jquery-1.7.2.min.js</code>

Also download the Highcharts Highstock !JavaScript library to the same directory:
<code language="sh">
wget http://www.highcharts.com/downloads/zips/Highstock-1.1.5.zip -O /tmp/highstock.zip
unzip -j /tmp/highstock.zip js/highstock.js -d /home/user/public_html/heatmiser-wifi</code>

== View Web Page ==

Open the new web page in a web browser such as Chrome, Firefox, Internet Explorer or Safari. If Apache is running on a host called `webserver` then the URL should be something like `http://webserver/~user/heatmiser-wifi/`.

If everything has been installed correctly then this should draw a chart with the recent temperatures:

<div align=center> http://heatmiser-wifi.googlecode.com/svn/wiki/chart-temperatures.png </div>

If the page completely fails to load then it is likely to be due to Apache's configuration for `/home/*/public_html` directories. If a *Loading...* message is displayed indefinitely then it is likely to be due to Apache's configuration for symbolic links to cgi-bin scripts. Either way, look at the last few lines of the `/var/log/apache2/error-log' file for clues.

External temperatures can be added to the chart by configuring use of an [InstallationWeather Online Weather Service]. Alternatively, setup [InstallationTimeSync Automatic Time Synchronisation] to keep your thermostat's clock accurate and automatically adjust to the start and end of summer (daylight saving) time.